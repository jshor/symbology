import{_ as i,r as c,o as d,c as r,a,b as n,w as t,e,d as o}from"./app.41cb161e.js";const l="/assets/barcodes/codablockf.png",p="/assets/barcodes/barcode_27.png",h="/assets/barcodes/barcode_28.png",m="/assets/barcodes/barcode_29.png",u="/assets/barcodes/barcode_30.png",b="/assets/barcodes/barcode_31.png",f="/assets/barcodes/barcode_32.png",k="/assets/barcodes/barcode_33.png",g={},y=a("h1",{id:"stacked-symbologies",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#stacked-symbologies","aria-hidden":"true"},"#"),e(" Stacked symbologies")],-1),_=a("p",null,"An early innovation to get more information into a symbol, used primarily in the vehicle industry, is to simply stack one-dimensional codes on top of each other. The stacked symbologies listed on this page are available.",-1),v=a("h2",{id:"codablock-f",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#codablock-f","aria-hidden":"true"},"#"),e(" Codablock-F")],-1),x=a("p",null,[a("img",{src:l,alt:"Codablock-F"})],-1),w=o(`<p>The width of the Codablock-F symbol can be specified via <code>option2</code> <strong>or</strong> the height (number of rows) can be specified via <code>option1</code>. The encoding of GS1 data in Codablock-F symbols is not supported.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h4><p>The following renders a a 5-row Codablock-F symbol:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">createStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  symbology<span class="token operator">:</span> SymbologyType<span class="token punctuation">.</span><span class="token constant">CODABLOCKF</span><span class="token punctuation">,</span>
  option1<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;11010000100101111011101001000011010100011000101000110001010001100010100011000110011001101100011101011&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="code-16k-en-12323" tabindex="-1"><a class="header-anchor" href="#code-16k-en-12323" aria-hidden="true">#</a> Code 16k (EN 12323)</h2><p><img src="`+p+'" alt="Code 16K"></p><p>Code 16k uses a Code 128 based system which can stack up to 16 rows in a block. This gives a maximum data capacity of 77 characters (or 154 numerical digits) and includes two modulo-107 check digits.</p>',7),S=o('<h2 id="pdf417-iso-15438" tabindex="-1"><a class="header-anchor" href="#pdf417-iso-15438" aria-hidden="true">#</a> PDF417 (ISO 15438)</h2><p><img src="'+h+'" alt="PDF417"></p><p>Heavily used in the parcel industry, the PDF417 symbology can encode a vast amount of data into a small space. Encoding up to the ISO standard maximum symbol size of 925 codewords which, at error correction level <code>0</code>, allows a maximum data size of 1850 text characters (or 2710 digits) is supported.</p><h3 id="security" tabindex="-1"><a class="header-anchor" href="#security" aria-hidden="true">#</a> Security</h3><p>The amount of check digit information can be specified by setting <code>option1</code> to the number of codewords (between <code>0</code> and <code>8</code>). The number of codewords used for check information is determined by 2<sup>(value + 1)</sup></p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>The default level of check information is determined by the amount of data being encoded. This symbology uses Latin-1 character encoding by default but also supports the ECI encoding mechanism.</p></div><h3 id="width" tabindex="-1"><a class="header-anchor" href="#width" aria-hidden="true">#</a> Width</h3><p>The width of the generated PDF417 symbol can be specified by setting <code>option2</code> to a number between <code>1</code> and <code>30</code>.</p>',8),C={class:"custom-container tip"},D=a("p",{class:"custom-container-title"},"Note",-1),T=a("code",null,"+",-1),I=o(`<h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example</h4><p>The following renders a 5-row Codablock-F symbol:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">createStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  symbology<span class="token operator">:</span> SymbologyType<span class="token punctuation">.</span><span class="token constant">CODABLOCKF</span><span class="token punctuation">,</span>
  option1<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;11010000100101111011101001000011010100011000101000110001010001100010100011000110011001101100011101011&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="compact-pdf417" tabindex="-1"><a class="header-anchor" href="#compact-pdf417" aria-hidden="true">#</a> Compact PDF417</h2><p>Also known as truncated PDF417. Options are the same as for PDF417 above.</p><h2 id="micropdf417-iso-24728" tabindex="-1"><a class="header-anchor" href="#micropdf417-iso-24728" aria-hidden="true">#</a> MicroPDF417 (ISO 24728)</h2><p><img src="`+m+'" alt="MicroPDF417"></p><p>A variation of the <a href="#pdf417-iso-15438">PDF417 standard</a>, MicroPDF417 is intended for applications where symbol size needs to be kept to a minimum. 34 predefined symbol sizes are available with 1 to 4 columns and 4 to 44 rows.</p><p>MicroPDF417 symbol can hold up to 250 alphanumeric characters (or 366 digits).</p><h3 id="error-correction-capacity" tabindex="-1"><a class="header-anchor" href="#error-correction-capacity" aria-hidden="true">#</a> Error correction capacity</h3><p>The amount of error correction used is dependent on symbol size.</p><h3 id="symbol-size" tabindex="-1"><a class="header-anchor" href="#symbol-size" aria-hidden="true">#</a> Symbol Size</h3><p>Like PDF417, the number of columns used can be determined by specifying <code>option2</code>.</p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>This symbology uses Latin-1 character encoding by default but also supports the ECI encoding mechanism.</p></div>',14),F={class:"custom-container tip"},B=a("p",{class:"custom-container-title"},"Note",-1),A=a("code",null,"+",-1),E=a("h2",{id:"gs1-databar-14-stacked-iso-24724",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#gs1-databar-14-stacked-iso-24724","aria-hidden":"true"},"#"),e(" GS1 DataBar-14 Stacked (ISO 24724)")],-1),P=a("p",null,[a("img",{src:u,alt:"GS1 DataBar-14 Stacked"})],-1),N=o('<div class="custom-container tip"><p class="custom-container-title">Note</p><ul><li>The height of this symbol is fixed.</li><li>The data is encoded in two rows of bars with a central finder pattern.</li><li>This symbol can be generated with a two-dimensional component to make a composite symbol.</li></ul></div><h2 id="gs1-databar-14-stacked-omnidirectional-iso-24724" tabindex="-1"><a class="header-anchor" href="#gs1-databar-14-stacked-omnidirectional-iso-24724" aria-hidden="true">#</a> GS1 DataBar-14 Stacked Omnidirectional (ISO 24724)</h2><p><img src="'+b+'" alt="GS1 DataBar-14 Stacked Omnidirectional"></p>',3),O=o('<div class="custom-container tip"><p class="custom-container-title">Note</p><ul><li>The data is encoded in two rows of bars with a central finder pattern.</li><li>This symbol can be generated with a two-dimensional component to make a composite symbol.</li></ul></div><h2 id="gs1-databar-expanded-stacked-iso-24724" tabindex="-1"><a class="header-anchor" href="#gs1-databar-expanded-stacked-iso-24724" aria-hidden="true">#</a> GS1 DataBar Expanded Stacked (ISO 24724)</h2><p><img src="'+f+'" alt="GS1 DataBar Expanded Stacked"></p>',3),G=o(`<h3 id="width-1" tabindex="-1"><a class="header-anchor" href="#width-1" aria-hidden="true">#</a> Width</h3><p>The width of the symbol can be altered by setting <code>option2</code> to the desired width.</p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>This symbol can be generated with a two-dimensional component to make a composite symbol. For symbols with a 2D component, the number of columns must be at least <code>2</code>.</p></div><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">createStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  symbology<span class="token operator">:</span> SymbologyType<span class="token punctuation">.</span><span class="token constant">EANX_CC</span><span class="token punctuation">,</span>
  option1<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  primary<span class="token operator">:</span> <span class="token string">&#39;331234567890&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;[99]1234-abcd&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="code-49" tabindex="-1"><a class="header-anchor" href="#code-49" aria-hidden="true">#</a> Code 49</h2><p><img src="`+k+'" alt="Code 49"></p><p>Developed in 1987 at Intermec, Code 49 is a cross between UPC and Code 39. It it one of the earliest stacked symbologies and influenced the design of Code 16K a few years later. It supports full 7-bit ASCII input up to a maximum of 49 characters or 81 numeric digits. GS1 data encoding is also supported.</p>',8);function z(L,H){const s=c("RouterLink");return d(),r("div",null,[y,_,a("p",null,[n(s,{to:"/reference/#stacked-symbologies"},{default:t(()=>[e("Click here")]),_:1}),e(" for a condensed list of stacked symbologies.")]),v,x,a("p",null,[e("This is a stacked symbology based on "),n(s,{to:"/reference/one-dimensional.html#code-128"},{default:t(()=>[e("Code 128")]),_:1}),e(" which can encode ASCII code set data up to a maximum length of 2725 characters.")]),w,a("p",null,[e("Code 16k also supports extended ASCII character encoding in the same manner as "),n(s,{to:"/reference/one-dimensional.html#code-128"},{default:t(()=>[e("Code 128")]),_:1}),e(".")]),S,a("div",C,[D,a("p",null,[e("A separate symbology ID can be used to encode "),n(s,{to:"/reference/one-dimensional.html#hibc-code-39"},{default:t(()=>[e("Health Industry Barcode (HIBC)")]),_:1}),e(" data which adds a leading "),T,e(" character and a modulo-49 check digit to the encoded data.")])]),I,a("div",F,[B,a("p",null,[e("A separate symbology ID can be used to encode "),n(s,{to:"/reference/one-dimensional.html#hibc-code-39"},{default:t(()=>[e("Health Industry Barcode (HIBC)")]),_:1}),e(" data which adds a leading "),A,e(" character and a modulo-49 check digit to the encoded data.")])]),E,P,a("p",null,[e("A stacked variation of "),n(s,{to:"/reference/one-dimensional.html#gs1-databar-iso-24724"},{default:t(()=>[e("GS1 DataBar-14")]),_:1}),e(", this symbol requires the "),n(s,{to:"/reference/one-dimensional.html#databar-14-and-databar-14-truncated"},{default:t(()=>[e("same type of input")]),_:1}),e(".")]),N,a("p",null,[e("Another stacked variation of "),n(s,{to:"/reference/one-dimensional.html#gs1-databar-iso-24724"},{default:t(()=>[e("GS1 DataBar-14")]),_:1}),e(", this symbol requires the "),n(s,{to:"/reference/one-dimensional.html#databar-14-and-databar-14-truncated"},{default:t(()=>[e("same type of input")]),_:1}),e(".")]),O,a("p",null,[e("A stacked variation of the "),n(s,{to:"/reference/one-dimensional.html#databar-expanded"},{default:t(()=>[e("GS1 DataBar Expanded")]),_:1}),e(" symbol for smaller packages. The input requirement is the same as for GS1 DataBar Expanded.")]),G])}const M=i(g,[["render",z],["__file","stacked.html.vue"]]);export{M as default};
